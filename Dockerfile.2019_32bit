# escape=`

FROM oist/nipm_base AS labview_prep
LABEL maintainer="Christian Butcher <christian.butcher@oist.jp>"

# Change the default shell
SHELL ["powershell"]

# Allow execution of powershell scripts
# Add the appropriate feeds for 2021, 32-bit.
COPY AddFeeds_2019-32bit.ps1 AddFeeds.ps1
RUN Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine ; `
	.\AddFeeds.ps1 ; `
	nipkg update; `
	Remove-Item AddFeeds.ps1 ;

# Build fake packages as required
COPY FakePackageCreator_ByName.ps1 GetPackageInfo.ps1 ./
COPY template_nipkg template_nipkg
RUN Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine ; `
	.\FakePackageCreator_ByName.ps1 -Zip -versionPattern '19*' -CleanCreatedFiles ; `
	Remove-Item -Recurse FakePackageCreator_ByName.ps1, GetPackageInfo.ps1, template_nipkg;

# Create and store the fake NIPKGs to satisfy dependencies
RUN Expand-Archive FakePackages.zip -DestinationPath "C:\Fake_NIPKGs_Feed\Store" ;`
	nipkg feed-create "C:\Fake_NIPKGs_Feed" "C:\Fake_NIPKGs_Feed\Store"; `
	nipkg feed-add --name="fake_nipkg_feed" --system "C:\Fake_NIPKGs_Feed"; `
	nipkg update; `
	Remove-Item FakePackages.zip

FROM labview_prep AS labview2019_base

RUN nipkg.exe install --accept-eulas -y `
ni-labview-2019-core-x86-en `
ni-certificates `
ni-labview-2019-vi-analyzer-toolkit-x86 `
ni-labview-2019-aspt-toolkit-x86 `
ni-sv-toolkit-2019-x86 ;`
if( $LASTEXITCODE.Equals(-125071) ) { `
	# Needs restart 
	Write-Output 'Exiting successfully' `
	exit 0 `
} else { `
	exit $LASTEXITCODE `
}

RUN nipkg.exe install --accept-eulas -y `
ni-daqmx `
ni-daqmx-labview-2019-support-x86 ;`
if( $LASTEXITCODE.Equals(-125071) ) { `
	# Needs restart 
	Write-Output 'Exiting successfully' `
	exit 0 `
} else { `
	exit $LASTEXITCODE `
}

RUN nipkg.exe install --accept-eulas -y `
	ni-labview-command-line-interface-x86 ;`
if( $LASTEXITCODE.Equals(-125071) ) { `
	# Needs restart 
	Write-Output 'Exiting successfully' `
	exit 0 `
} else { `
	exit $LASTEXITCODE `
}

# Activate LabVIEW
ARG LABVIEW_SERIAL_NUMBER
COPY activateLabVIEW.ps1 .
RUN .\activateLabVIEW.ps1 -Version '19.0001' -SerialNumber $env:LABVIEW_SERIAL_NUMBER; `
	Remove-Item activateLabVIEW.ps1

# Copy an INI file to enable VI Server
ARG INI_Path="C:\Program Files (x86)\National Instruments\LabVIEW 2019\LabVIEW.ini"
COPY defaultLabVIEWIni.ini ${INI_Path}

# Download and install G_CLI
ARG g_cli_url="https://github.com/JamesMc86/G-CLI/releases/download/v2.4.0/wiresmith_technology_lib_g_cli-2.4.0.5.vip"
RUN $ErrorActionPreference = 'Stop' ; `
	$ProgressPreference = 'SilentlyContinue' ; `
	Invoke-WebRequest -Uri $env:g_cli_url -OutFile g_cli.zip ; `
	Expand-Archive .\g_cli.zip -DestinationPath .\g_cli -Force ; `
	Remove-Item g_cli.zip ; 

# Copy an INI file to extend the timeout duration for LabVIEW CLI
ARG INI_Path_CLI="C:\Program Files (x86)\National Instruments\Shared\LabVIEW CLI\LabVIEWCLI.ini"
COPY LabVIEWCLI.ini ${INI_Path_CLI}

RUN Write-Host "Copying GCLI to final location" ; `
	Copy-Item -Path '.\g_cli\File Group 0\\*' -Destination 'C:\Program Files (x86)\National Instruments\LabVIEW 2019\\' -Recurse -Force; `
	Remove-Item -Path g_cli -Force -Recurse; 

ARG G_CLI_InstalledPath="C:\Program Files (x86)\National Instruments\LabVIEW 2019\vi.lib\Wiresmith Technology\G CLI"
ARG G_CLI_MSIPath="C:\Program Files (x86)\National Instruments\LabVIEW 2019\vi.lib\Wiresmith Technology\G CLI\Installation Support\G_CLI_x64.msi"
RUN	Start-Process -Wait $env:G_CLI_MSIPath -ArgumentList '-q', '-l* installation_log.txt'; 
# RUN LabVIEWCLI.exe -OperationName MassCompile -DirectoryToCompile $env:G_CLI_InstalledPath -Verbosity Diagnostic; 
RUN Start-Process -Wait '"C:\Program Files\G-CLI\g-cli.exe"' -ArgumentList "--version" -RedirectStandardOutput dummy.txt; cat dummy.txt; rm dummy.txt

# This script is very slow - if you don't need DAQmx, consider removing it to speed up your image build
# However, it will have little impact on container execution times (just image build time)
COPY InstallDAQmxCore.ps1 InstallDAQmxCore.ps1
RUN .\InstallDAQmxCore.ps1; `
	Remove-Item InstallDAQmxCore.ps1;

FROM labview2019_base AS labview2019_base_gocd
# Allow the startup of ssh-agent in the image without enabling every run.
RUN Get-Service ssh-agent | Set-Service -StartupType Manual

# This is placed at the bottom to allow more easily rebuilding without reinstalling all of LabVIEW.
COPY go-agent.ps1 .
ARG GO_SERVER_URL="http://172.25.224.1:8153/go"
RUN $ProgressPreference = 'SilentlyContinue'; Invoke-WebRequest ($env:GO_SERVER_URL + '/admin/agent') -OutFile 'agent.jar'
RUN $ProgressPreference = 'SilentlyContinue'; Invoke-WebRequest ($env:GO_SERVER_URL + '/admin/agent-plugins.zip') -OutFile 'agent-plugins.zip'
RUN $ProgressPreference = 'SilentlyContinue'; Invoke-WebRequest ($env:GO_SERVER_URL + '/admin/tfs-impl.jar') -OutFile 'tfs-impl.jar'

FROM labview2019_base AS labview2019_extended

RUN nipkg.exe install --accept-eulas -y `
ni-labview-2019-rt-module-x86-en `
ni-lvrt-19.0.0-crio-labview-support `
ni-compactrio-c-series-labview-2019-support-x86 `
ni-compactrio-19.5.0-realtime-support `
ni-compactrio-labview-2019-support-x86 ;`
if( $LASTEXITCODE.Equals(-125071) ) { `
	# Needs restart 
	Write-Output 'Exiting successfully' `
	exit 0 `
} else { `
	exit $LASTEXITCODE `
}

# Activate LabVIEW
ARG LABVIEW_SERIAL_NUMBER
COPY activateLabVIEW_RT.ps1 .
RUN .\activateLabVIEW_RT.ps1 -Version '19.0000' -SerialNumber $env:LABVIEW_SERIAL_NUMBER; `
	Remove-Item activateLabVIEW_RT.ps1

# Add the FPGA module?
#RUN nipkg.exe install --accept-eulas -y `
#ni-labview-2019-fpga-module-x86-en

FROM labview2019_extended AS labview2019_extended_gocd
# Allow the startup of ssh-agent in the image without enabling every run.
RUN Get-Service ssh-agent | Set-Service -StartupType Manual

# This is placed at the bottom to allow more easily rebuilding without reinstalling all of LabVIEW.
COPY go-agent.ps1 .
ARG GO_SERVER_URL="http://172.25.224.1:8153/go"
RUN $ProgressPreference = 'SilentlyContinue';`
	Invoke-WebRequest ($env:GO_SERVER_URL + '/admin/agent') -OutFile 'agent.jar';`
	Invoke-WebRequest ($env:GO_SERVER_URL + '/admin/agent-plugins.zip') -OutFile 'agent-plugins.zip';`
	Invoke-WebRequest ($env:GO_SERVER_URL + '/admin/tfs-impl.jar') -OutFile 'tfs-impl.jar'

# FROM labview2019_extended AS labview2019_visa
# ARG VISA_Url="https://download.ni.com/support/nipkg/products/ni-v/ni-visa/19.0/offline/ni-visa_19.0.0_offline.iso"
# RUN Invoke-WebRequest -Uri $env:VISA_Url -OutFile ni-visa_offline.iso `
# ; Mount-DiskImage -ImagePath "C:\ni-visa_offline.iso" `
# ;

# RUN nipkg.exe install --accept-eulas -y `
# ni-visa `
# ni-visa-labview-2019-support-x86 `
# ni-visa-19.0.0-realtime-bin